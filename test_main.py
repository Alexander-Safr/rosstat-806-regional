import os
import sys
import pandas as pd

from getter import get_dataframe_by_definition

from regions import Regions
filter_region_name = Regions.filter_region_name
reference_region_names = Regions.names()

# -------------------------------------------------------------------------
# Defintions
# -------------------------------------------------------------------------

XL_FOLDER = os.path.join('xls', 'sample')

source_def_sample = {'varname':'PPI_PROM_ytd', 
     'folder': XL_FOLDER, 
   'filename':'industrial_prices.xls',
      'sheet':'пром.товаров',
     'anchor':'B5', 'anchor_value': 96.6}    

def_dict_2 = {'varname':'SHIPMENTS', 
     'folder': XL_FOLDER , 
   'filename':'shipment.xls',
      'sheet':'Млн.рублей',
     'anchor':'B6', 'anchor_value': 5331853.711}    
     

# -------------------------------------------------------------------------
# test_dataframe.py code
# -------------------------------------------------------------------------
  
df = get_dataframe_by_definition(source_def_sample)
   
# Tests - tests for dataframe check the following:
# - class of output is dataframe
def test_class():
    assert isinstance(df, pd.DataFrame)

# Dataframe column list 
# todo: df.columns must have same content as testable_region_names

def test_columns():
    for col in df.columns:
       assert col in  reference_region_names

# Dataframe index
# index starts with Jan 2009
def test_start_index():
    assert df.index[0].year == 2009
    assert df.index[0].month == 1

# Selected values in dataframe:
def test_values():
    assert df['Российская Федерация']['2009-01-01'] == 96.6
    # check bottom-right 
    assert df['Чукотский авт. округ']['2015-12-01'] == 118

# -------------------------------------------------------------------------
# test_dataframe.py code
# -------------------------------------------------------------------------

from xls_read import read_by_definition, yearmon

def test_first_value():        
    gen = read_by_definition(source_def_sample) 
    assert next(gen) == (96.6,  "Российская Федерация", yearmon(2009, 1))
    
def test_auto_search():
    gen1 = read_by_definition(source_def_sample, True)
    gen2 = read_by_definition(source_def_sample, False)    
    assert next(gen1) == next(gen2)
    
    gen1 = read_by_definition(def_dict_2 , True)
    gen2 = read_by_definition(def_dict_2 , False)    
    assert next(gen1) == next(gen2)
    
# -------------------------------------------------------------------------
# test_regions.py code
# -------------------------------------------------------------------------

# test data samples in one dict(key=source_xls_filename, value=list of raw titles)
from testdata import test_regions_dict

def test_match():
    for key, sample in test_regions_dict.items():
      assert set(reference_region_names) == set(filter_region_name(r) for r in sample)

def test_individual_names():        
    assert 'Сибирский федеральный округ' == filter_region_name('Сибирский           федеральный округ')         
    assert 'Тюменская область' == filter_region_name('Тюменская область')         
    assert 'Тюменская область без авт. округов' == filter_region_name('Тюменская область без авт. округов 3')         
    
sidebar_doc = """Российская Федерация 1
Центральный федеральный округ
Белгородская область
Брянская область
Владимирская область
Воронежская область
Ивановская область
Калужская область
Костромская область
Курская область
Липецкая область
Московская область  2
Орловская область
Рязанская область
Смоленская область
Тамбовская область
Тверская область
Тульская область
Ярославская область
г.Москва  2
Северо-Западный федеральный округ
Республика Карелия
Республика Коми
Архангельская область
в том числе               Ненецкий авт.округ
Архангельская область без авт. округа 3
Вологодская область
Калининградская область
Ленинградская область
Мурманская область
Новгородская область
Псковская область
г.Санкт-Петербург
Южный                   федеральный округ 4
Республика Адыгея
Республика Калмыкия
Краснодарский край
Астраханская область
Волгоградская область
Ростовская область
Северо-Кавказский федеральный округ
Республика Дагестан
Республика Ингушетия
Кабардино-Балкарская Республика
Карачаево-Черкесская Республика
Республика Северная  Осетия - Алания
Чеченская Республика
Ставропольский край
Приволжский               федеральный округ
Республика Башкортостан
Республика Марий Эл
Республика Мордовия
Республика Татарстан
Удмуртская Республика
Чувашская Республика
Пермский край
Кировская область
Нижегородская область
Оренбургская область
Пензенская область 
Самарская область
Саратовская область
Ульяновская область
Уральский             федеральный округ
Курганская область
Свердловская область
Тюменская область
в том числе:                     Ханты-Мансийский       авт. округ - Югра
Ямало-Ненецкий             авт. округ
Тюменская область без авт. округов 3
Челябинская область
Сибирский           федеральный округ
Республика Алтай
Республика Бурятия
Республика Тыва
Республика Хакасия
Алтайский край
Забайкальский край
Красноярский край
Иркутская область
Кемеровская область
Новосибирская область  
Омская область
Томская область
Дальневосточный федеральный округ
Республика Саха (Якутия)
Камчатский край
Приморский край
Хабаровский край
Амурская область
Магаданская область
Сахалинская область
Еврейская авт.область
Чукотский авт.округ
Крымский федеральный округ
Республика Крым
г. Севастополь"""

# (1) truncated 'федеральный округ' and whitespace around it
# (2) truncated region name with whitespaces or many words
testable_sidebar_doc = """Российская Федерация
Центральный федеральный округ
Белгородская область
Брянская область
Владимирская область
Воронежская область
Ивановская область
Калужская область
Костромская область
Курская область
Липецкая область
Московская область
Орловская область
Рязанская область
Смоленская область
Тамбовская область
Тверская область
Тульская область
Ярославская область
г. Москва
Северо-Западный федеральный округ
Республика Карелия
Республика Коми
Архангельская область
Ненецкий авт. округ
Архангельская область без авт. округа
Вологодская область
Калининградская область
Ленинградская область
Мурманская область
Новгородская область
Псковская область
г. Санкт-Петербург
Южный федеральный округ
Республика Адыгея
Республика Калмыкия
Краснодарский край
Астраханская область
Волгоградская область
Ростовская область
Северо-Кавказский федеральный округ
Республика Дагестан
Республика Ингушетия
Кабардино-Балкарская Республика
Карачаево-Черкесская Республика
Республика Северная Осетия - Алания
Чеченская Республика
Ставропольский край
Приволжский федеральный округ
Республика Башкортостан
Республика Марий Эл
Республика Мордовия
Республика Татарстан
Удмуртская Республика
Чувашская Республика
Пермский край
Кировская область
Нижегородская область
Оренбургская область
Пензенская область
Самарская область
Саратовская область
Ульяновская область
Уральский федеральный округ
Курганская область
Свердловская область
Тюменская область
Ханты-Мансийский авт. округ - Югра
Ямало-Ненецкий авт. округ
Тюменская область без авт. округов
Челябинская область
Сибирский федеральный округ
Республика Алтай
Республика Бурятия
Республика Тыва
Республика Хакасия
Алтайский край
Забайкальский край
Красноярский край
Иркутская область
Кемеровская область
Новосибирская область
Омская область
Томская область
Дальневосточный федеральный округ
Республика Саха (Якутия)
Камчатский край
Приморский край
Хабаровский край
Амурская область
Магаданская область
Сахалинская область
Еврейская авт. область
Чукотский авт. округ
Крымский федеральный округ
Республика Крым
г. Севастополь"""

def test_this_sidebar():
    actual_sidebar_list = sidebar_doc.split("\n")
    testable_region_names = testable_sidebar_doc.split("\n")
    for a,v in zip(actual_sidebar_list, testable_region_names):
       #print(a,v)
       assert v == filter_region_name(a)